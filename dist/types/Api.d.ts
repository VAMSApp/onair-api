import { VirtualAirline, Flight, Aircraft, Airport, Fbo, Company, Job, BalanceSheet, CashFlow, IncomeStatement, Member, Notification, People, ShareHolder, WorkOrder, VARole, FlightTrack, AircraftType, AircraftClass, AircraftEngine } from './';
export declare type IncomeStatementResponse = {
    StartDate: string;
    EndDate: string;
    Content: IncomeStatement | IncomeStatement[] | null;
};
export declare type BalanceSheetResponse = BalanceSheet | null;
export declare type VirtualAirlineResponse = VirtualAirline | null;
export declare type FlightResponse = Flight | null;
export declare type AircraftResponse = Aircraft | null;
export declare type AircraftEngineResponse = AircraftEngine | null;
export declare type AircraftTypeResponse = AircraftType;
export declare type AircraftClassResponse = AircraftClass;
export declare type AirportResponse = Airport | null;
export declare type FboResponse = Fbo | null;
export declare type CompanyResponse = Company | null;
export declare type JobResponse = Job | null;
export declare type CashFlowResponse = CashFlow | null;
export declare type MemberResponse = Member | null;
export declare type FlightTrackResponse = FlightTrack | null;
export declare type NotificationResponse = Notification | null;
export declare type EmployeeResponse = People | null;
export declare type ShareHolderResponse = ShareHolder | null;
export declare type WorkOrderResponse = WorkOrder | null;
export declare type VARoleResponse = VARole | null;
export declare type GetAircraft = (aircraftId: string, apiKey: string) => Promise<AircraftResponse>;
export declare type GetAircraftFlights = (aircraftId: string, apiKey: string, page?: number, limit?: number) => Promise<Flight[]>;
export declare type GetAirport = (icao: string, apiKey: string) => Promise<AirportResponse>;
export declare type GetCompanyFbos = (companyId: string, apiKey: string) => Promise<Fbo[]>;
export declare type GetCompanyFleet = (companyId: string, apiKey: string) => Promise<Aircraft[]>;
export declare type GetCompanyFlights = (companyId: string, apiKey: string, page?: number, limit?: number) => Promise<Flight[]>;
export declare type GetCompanyJobs = (companyId: string, apiKey: string, completed?: boolean) => Promise<Job[]>;
export declare type GetCompanyEmployees = (companyId: string, apiKey: string) => Promise<People[]>;
export declare type GetCompanyCashFlow = (companyId: string, apiKey: string) => Promise<CashFlowResponse>;
export declare type GetCompanyIncomeStatement = (companyId: string, apiKey: string, startDate?: string, endDate?: string) => Promise<IncomeStatementResponse>;
export declare type GetCompanyBalanceSheet = (companyId: string, apiKey: string) => Promise<BalanceSheetResponse>;
export declare type GetCompanyWorkOrders = (companyId: string, apiKey: string) => Promise<WorkOrder[]>;
export declare type GetCompanyMissionFlightTracks = (companyId: string, apiKey: string) => Promise<FlightTrack[]>;
export declare type GetCompany = (companyId: string, apiKey: string) => Promise<CompanyResponse>;
export declare type GetCompanyNotifications = (vaId: string, apiKey: string) => Promise<Notification[]>;
export declare type GetFlight = (flightId: string, apiKey: string) => Promise<FlightResponse>;
export declare type GetVirtualAirlineMembers = (vaId: string, apiKey: string) => Promise<Member[]>;
export declare type GetVirtualAirline = (vaId: string, apiKey: string) => Promise<VirtualAirlineResponse>;
export declare type GetVirtualAirlineShareHolders = (vaId: string, apiKey: string) => Promise<ShareHolder[]>;
export declare type GetVirtualAirlineRoles = (vaId: string, apiKey: string) => Promise<VARole[]>;
export declare type GetVirtualAirlineFlights = (vaId: string, apiKey: string, page?: number | undefined, limit?: number | undefined) => Promise<Flight[]>;
export declare type GetVirtualAirlineFleet = (vaId: string, apiKey: string) => Promise<Aircraft[]>;
export declare type GetVirtualAirlineJobs = (vaId: string, apiKey: string, showCompleted?: boolean) => Promise<Job[]>;
export declare type GetVirtualAirlineFbos = (vaId: string, apiKey: string) => Promise<Fbo[]>;
export declare type GetVirtualAirlineNotifications = (vaId: string, apiKey: string) => Promise<Notification[]>;
export declare type GetVirtualAirlineIncomeStatement = (vaId: string, apiKey: string, startDate?: string, endDate?: string) => Promise<IncomeStatementResponse>;
export declare type GetVirtualAirlineWorkOrders = (companyId: string, apiKey: string) => Promise<WorkOrder[]>;
export declare type GetEmployee = (employeeId: string, apiKey: string) => Promise<EmployeeResponse>;
export declare type GetCompanyAircraftWorkOrders = (companyId: string, aircraftId: string, apiKey: string) => Promise<WorkOrder[]>;
export declare type GetFboJobs = (fboId: string, apiKey: string) => Promise<Job[]>;
export declare type OnAirApiConfigOptions = {
    logLevel: string;
    logConsole?: boolean;
};
export declare type OnAirApiConfig = {
    apiKey: string;
    companyId?: string | undefined;
    vaId?: string | undefined;
    options?: OnAirApiConfigOptions;
};
