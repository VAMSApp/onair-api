import { Airport } from "./Airport";
import { Company } from "./Company";
export declare const engineTypes: string[];
export declare const aircraftStatuses: string[];
export interface AircraftType {
    Id: string;
    Hash: string;
    AircraftClassId: string;
    AircraftClass: Record<string, unknown>;
    CreationDate: string;
    LastModerationDate: string;
    DisplayName: string;
    TypeName: string;
    FlightsCount: number;
    TimeBetweenOverhaul: number;
    HightimeAirframe: number;
    AirportMinSize: number;
    emptyWeight: number;
    maximumGrossWeight: number;
    estimatedCruiseFF: number;
    Baseprice: number;
    FuelTotalCapacityInGallons: number;
    engineType: number;
    numberOfEngines: number;
    seats: number;
    needsCopilot: boolean;
    fuelType: number;
    maximumCargoWeight: number;
    maximumRangeInHour: number;
    maximumRangeInNM: number;
    designSpeedVS0: number;
    designSpeedVS1: number;
    designSpeedVC: number;
    IsDisabled: boolean;
    LuxeFactor: number;
    StandardSeatWeight: number;
    IsFighter: number;
    AirFileName: string;
    simulatorVersion: number | unknown;
    ConsolidatedDesignSpeedVC: number;
    ConsolidatedEstimatedCruiseFF: number;
    EnableAutoConsolidation: boolean;
    AddonEstimatedFuelFlow: number;
    AddonDesignSpeedVC: number;
    ComputedMaxPayload: number;
    ComputedSeats: number;
    IsVanilla: boolean;
    CreatedByUserId: string;
    TestedByUser: boolean;
}
export interface Aircraft {
    Id: string;
    AircraftTypeId: string;
    AircraftType: AircraftType;
    Nickname: string;
    WorldId: string;
    CurrentAirportId: string;
    CurrentAirport: Airport;
    AircraftStatus: number;
    LastStatusChange: number;
    CurrentStatusDurationInMinutes: number;
    AllowSell: boolean;
    AllowRent: boolean;
    SellPrice: number;
    RentHourPrice: number;
    RentAirportId: string;
    RentAirport: Airport;
    RentFuelTotalGallons: number;
    RentCautionAmount: number;
    RentCompanyId: string;
    RentCompany: Company;
    RentStartDate: string;
    RentLastDailyChargeDate: string;
    Identifier: string;
    Heading: number;
    Longitude: number;
    Latitude: number;
    fuelTotalGallons: number;
    fuelWeight: number;
    loadedWeight: number;
    zeroFuelWeight: number;
    airframeHours: number;
    airframeCondition: number;
    AirframeMaxCondition: number;
    LastAnnualCheckup: string;
    Last100hInspection: string;
    LastWeeklyOwnershipPayment: string;
    LastParkingFeePayment: string;
    IsControlledByAI: boolean;
    HoursBefore100HInspection: number;
    Engines: Record<string, unknown>[];
    ConfigFirstSeats: number;
    ConfigBusSeats: number;
    ConfigEcoSeats: number;
    SeatsReservedForEmployees: number;
    RemainingMaintenanceWorkHours: number;
    CurrentCompanyId: string;
    CurrentCompanyIdIfAny: string;
    ExtraWeightCapacity: number;
    TotalWeightCapacity: number;
    CurrentSeats: number;
    MustDoMaintenance: boolean;
}
